name: ci-android

on:
  workflow_dispatch: {}
  workflow_call: {}

env:
  BUILD_TYPE: Release

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      ANDROID_NDK: "/usr/local/lib/android/sdk/ndk/24.0.8215888"
      ANDROID_NDK_HOME: "/usr/local/lib/android/sdk/ndk/24.0.8215888"
      ANDROID_NDK_LATEST_HOME: "/usr/local/lib/android/sdk/ndk/24.0.8215888"
      ANDROID_NDK_ROOT: "/usr/local/lib/android/sdk/ndk/24.0.8215888"
    steps:
    - uses: actions/checkout@v3

    - name: Configure environment
      run: |
        sudo apt install -y git build-essential ninja-build

    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg ~/vcpkg-ci
        pushd ~/vcpkg-ci
        ./bootstrap-vcpkg.sh
        popd

    - name: Build (Android armeabi-v7a)
      if: '!cancelled()'
      run: |
        VCPKG_INSTALLATION_ROOT=~/vcpkg-ci
        CFG_FLAGS=('-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}' '-DBUILD_SHARED_LIBS=YES' '-DVCPKG_CMAKE_SYSTEM_NAME=Android' '-DCMAKE_SYSTEM_NAME=Android' "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake" "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake")
        cd "${{github.workspace}}/Native"

        TRIPLET='arm-neon-android'
        ABI='armeabi-v7a'
        cmake -B ${{github.workspace}}/Native/build-$TRIPLET -DVCPKG_TARGET_TRIPLET=$TRIPLET -DANDROID_ABI=$ABI "${CFG_FLAGS[@]}"
        cmake --build ${{github.workspace}}/Native/build-$TRIPLET --config ${{env.BUILD_TYPE}}

    - name: Build (Android arm64-v8a)
      if: '!cancelled()'
      run: |
        VCPKG_INSTALLATION_ROOT=~/vcpkg-ci
        CFG_FLAGS=('-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}' '-DBUILD_SHARED_LIBS=YES' '-DVCPKG_CMAKE_SYSTEM_NAME=Android' '-DCMAKE_SYSTEM_NAME=Android' "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake" "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake")
        cd "${{github.workspace}}/Native"
        
        TRIPLET='arm64-android'
        ABI='arm64-v8a'
        cmake -B ${{github.workspace}}/Native/build-$TRIPLET -DVCPKG_TARGET_TRIPLET=$TRIPLET -DANDROID_ABI=$ABI "${CFG_FLAGS[@]}"
        cmake --build ${{github.workspace}}/Native/build-$TRIPLET --config ${{env.BUILD_TYPE}}
        

    - name: Build (Android x86)
      if: '!cancelled()'
      run: |
        VCPKG_INSTALLATION_ROOT=~/vcpkg-ci
        CFG_FLAGS=('-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}' '-DBUILD_SHARED_LIBS=YES' '-DVCPKG_CMAKE_SYSTEM_NAME=Android' '-DCMAKE_SYSTEM_NAME=Android' "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake" "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake")
        cd "${{github.workspace}}/Native"
        
        TRIPLET='x86-android'
        ABI='x86'
        cmake -B ${{github.workspace}}/Native/build-$TRIPLET -DVCPKG_TARGET_TRIPLET=$TRIPLET -DANDROID_ABI=$ABI "${CFG_FLAGS[@]}"
        cmake --build ${{github.workspace}}/Native/build-$TRIPLET --config ${{env.BUILD_TYPE}}

    - name: Build (Android x86_64)
      if: '!cancelled()'
      run: |
        VCPKG_INSTALLATION_ROOT=~/vcpkg-ci
        CFG_FLAGS=('-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}' '-DBUILD_SHARED_LIBS=YES' '-DVCPKG_CMAKE_SYSTEM_NAME=Android' '-DCMAKE_SYSTEM_NAME=Android' "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake" "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake")
        cd "${{github.workspace}}/Native"
        
        TRIPLET='x64-android'
        ABI='x86_64'
        cmake -B ${{github.workspace}}/Native/build-$TRIPLET -DVCPKG_TARGET_TRIPLET=$TRIPLET -DANDROID_ABI=$ABI "${CFG_FLAGS[@]}"
        cmake --build ${{github.workspace}}/Native/build-$TRIPLET --config ${{env.BUILD_TYPE}}

    - name: Upload Artifact (arm-android)
      if: '!cancelled()'
      uses: actions/upload-artifact@v3.1.2
      with:
        name: libuniasset-arm-neon-android.so
        path: ${{github.workspace}}/Native/build-arm-neon-android/src/uniasset/libuniasset.so

    - name: Upload Artifact (arm64-android)
      if: '!cancelled()'
      uses: actions/upload-artifact@v3.1.2
      with:
        name: libuniasset-arm64-android.so
        path: ${{github.workspace}}/Native/build-arm64-android/src/uniasset/libuniasset.so

    - name: Upload Artifact (x86-android)
      if: '!cancelled()'
      uses: actions/upload-artifact@v3.1.2
      with:
        name: libuniasset-x86-android.so
        path: ${{github.workspace}}/Native/build-x86-android/src/uniasset/libuniasset.so

    - name: Upload Artifact (x64-android)
      if: '!cancelled()'
      uses: actions/upload-artifact@v3.1.2
      with:
        name: libuniasset-x64-android.so
        path: ${{github.workspace}}/Native/build-x64-android/src/uniasset/libuniasset.so
